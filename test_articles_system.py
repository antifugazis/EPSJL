#!/usr/bin/env python3
"""
Script de test pour v√©rifier que le syst√®me d'articles fonctionne
Usage: python test_articles_system.py
"""

from app import app, db
from models import Article, User
from datetime import datetime, date

def test_articles_system():
    """Tester le syst√®me d'articles"""
    
    print("üß™ Test du syst√®me d'articles...")
    print()
    
    with app.app_context():
        # 1. V√©rifier que la table existe
        print("1Ô∏è‚É£ V√©rification de la table articles...")
        inspector = db.inspect(db.engine)
        tables = inspector.get_table_names()
        
        if 'articles' not in tables:
            print("‚ùå ERREUR: La table 'articles' n'existe pas!")
            print("   Ex√©cutez d'abord: python create_articles_table.py")
            return False
        print("‚úÖ Table 'articles' trouv√©e")
        print()
        
        # 2. V√©rifier qu'il y a au moins un utilisateur admin
        print("2Ô∏è‚É£ V√©rification des utilisateurs admin...")
        admin = User.query.filter_by(role='admin').first()
        if not admin:
            print("‚ö†Ô∏è  Aucun utilisateur admin trouv√©")
            print("   Les articles de test ne pourront pas avoir d'auteur")
            auteur_id = None
        else:
            print(f"‚úÖ Admin trouv√©: {admin.prenom} {admin.nom}")
            auteur_id = admin.id
        print()
        
        # 3. Compter les articles existants
        print("3Ô∏è‚É£ Comptage des articles existants...")
        count = Article.query.count()
        print(f"üìä {count} article(s) dans la base de donn√©es")
        print()
        
        # 4. Cr√©er un article de test (si demand√©)
        print("4Ô∏è‚É£ Voulez-vous cr√©er un article de test? (o/n): ", end='')
        response = input().strip().lower()
        
        if response == 'o':
            print("\nüìù Cr√©ation d'un article de test...")
            
            test_article = Article(
                titre="Article de test - Journ√©e Portes Ouvertes",
                slug="article-de-test-journee-portes-ouvertes",
                description_courte="Venez d√©couvrir notre √©cole lors de notre journ√©e portes ouvertes!",
                contenu="""Nous sommes ravis de vous inviter √† notre journ√©e portes ouvertes.

Au programme:
- Visite guid√©e du campus
- Rencontre avec les enseignants
- Pr√©sentation des programmes
- Activit√©s pour les enfants

Venez nombreux!""",
                categorie="vie-scolaire",
                date_evenement=date(2025, 11, 15),
                auteur_id=auteur_id,
                actif=True
            )
            
            try:
                db.session.add(test_article)
                db.session.commit()
                print("‚úÖ Article de test cr√©√© avec succ√®s!")
                print(f"   ID: {test_article.id}")
                print(f"   Slug: {test_article.slug}")
                print(f"   URL: /articles/{test_article.slug}")
            except Exception as e:
                print(f"‚ùå Erreur lors de la cr√©ation: {str(e)}")
                db.session.rollback()
                return False
        print()
        
        # 5. Afficher tous les articles
        print("5Ô∏è‚É£ Liste de tous les articles:")
        articles = Article.query.order_by(Article.date_creation.desc()).all()
        
        if not articles:
            print("   Aucun article trouv√©")
        else:
            for i, article in enumerate(articles, 1):
                status = "üü¢" if article.actif else "üî¥"
                print(f"   {i}. {status} {article.titre}")
                print(f"      Cat√©gorie: {article.categorie}")
                print(f"      Slug: {article.slug}")
                print(f"      Vues: {article.vues}")
                print(f"      Cr√©√© le: {article.date_creation.strftime('%d/%m/%Y %H:%M')}")
                if article.auteur:
                    print(f"      Auteur: {article.auteur.prenom} {article.auteur.nom}")
                print()
        
        # 6. Tester les routes
        print("6Ô∏è‚É£ Test des routes:")
        print("   üìç Routes publiques:")
        print("      - /evenements (liste des actualit√©s)")
        print("      - /articles/<slug> (d√©tails d'un article)")
        print()
        print("   üîê Routes admin:")
        print("      - /articles/admin/liste (liste admin)")
        print("      - /articles/admin/nouveau (cr√©er)")
        print("      - /articles/admin/modifier/<id> (modifier)")
        print()
        
        return True

if __name__ == '__main__':
    print("=" * 70)
    print("  TEST DU SYST√àME D'ARTICLES/ACTUALIT√âS")
    print("=" * 70)
    print()
    
    success = test_articles_system()
    
    print("=" * 70)
    if success:
        print("‚úÖ TOUS LES TESTS SONT PASS√âS!")
        print()
        print("üöÄ Prochaines √©tapes:")
        print("   1. D√©marrez l'application: python app.py")
        print("   2. Connectez-vous en tant qu'admin")
        print("   3. Allez dans 'Articles/Actualit√©s' dans le menu")
        print("   4. Cr√©ez votre premier article avec une image!")
        print()
        print("üìñ Documentation:")
        print("   - ARTICLES_SYSTEM_README.md")
        print("   - ADMISSION_VS_INSCRIPTION.md")
        print("   - IMPLEMENTATION_SUMMARY.md")
    else:
        print("‚ùå CERTAINS TESTS ONT √âCHOU√â")
        print("   Consultez les erreurs ci-dessus")
    print("=" * 70)
